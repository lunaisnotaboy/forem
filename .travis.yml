language: ruby
cache:
  directories:
    - vendor/bundle
    - node_modules
    - $HOME/.nvm
    - ~/.cache # cache folder with Cypress binary
rvm:
  - 2.7.2
addons:
  postgresql: '10' # Travis does not work out of the box with Postgres 11 yet
  chrome: 'stable'
  artifacts:
    paths:
      - $(ls tmp/screenshots/*.png | tr "\n" ":")
      - $(ls tmp/csvs/*.csv | tr "\n" ":")
      - $(ls cypress/screenshots/*.* | tr "\n" ":")
      - $(ls cypress/videos/*.* | tr "\n" ":")
    debug: true
services:
  - redis
env:
  global:
    - RAILS_ENV=test
    - CC_TEST_REPORTER_ID=6ab3567a88f2a91bdbddd4883bf9c329e9b1db1d1eb9ddb776aace0a59282042
    - DATABASE_URL=postgres://postgres@localhost/
    # Dummy values needed to verify the app boots via "rails runner"
    - APP_PROTOCOL=http://
    - APP_DOMAIN=localhost:3000
    - HEROKU_APP_URL=themintfarm.herokuapp.com
    - SECRET_KEY_BASE=dummydummydummy
    - GITHUB_KEY=dummy
    - GITHUB_SECRET=dummy
    - KNAPSACK_PRO_FIXED_QUEUE_SPLIT=true
    - KNAPSACK_PRO_LOG_LEVEL=info
    - KNAPSACK_PRO_CI_NODE_TOTAL=3
    - COVERAGE_REPORTS_TOTAL=4
    - FOREM_OWNER_SECRET="secret" # test secret so e2e tests can run properly.
    - ELASTICSEARCH_URL="http://localhost:9200"
  jobs:
    - KNAPSACK_PRO_CI_NODE_INDEX=0
    - KNAPSACK_PRO_CI_NODE_INDEX=1
    - KNAPSACK_PRO_CI_NODE_INDEX=2
branches:
  only:
    - master
install: true
script:
  - date --rfc-3339=seconds
  - nvm install
  - cp .env_sample .env
  - pkill -9 -f elasticsearch || true
  - curl -s -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.5.2-amd64.deb
  - sudo dpkg -i --force-confnew elasticsearch-7.5.2-amd64.deb
  - sudo sed -i.old 's/-Xms1g/-Xms128m/' /etc/elasticsearch/jvm.options
  - sudo sed -i.old 's/-Xmx1g/-Xmx128m/' /etc/elasticsearch/jvm.options
  - echo -e '-XX:+DisableExplicitGC\n-Djdk.io.permissionsUseCanonicalPath=true\n-Dlog4j.skipJansi=true\n-server\n' | sudo tee -a /etc/elasticsearch/jvm.options
  - sudo chown -R elasticsearch:elasticsearch /etc/default/elasticsearch
  - sudo systemctl start elasticsearch
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - bundle config set path 'vendor/bundle'
  - bin/ci-bundle
  - yarn install --frozen-lockfile
  - bundle exec rails db:create
  - bundle exec rails db:schema:load
  - bundle exec rails assets:precompile
  - './cc-test-reporter before-build'
  - if [ "$KNAPSACK_PRO_CI_NODE_INDEX" == "0" ]; then yarn test --colors; fi
  - if [ "$KNAPSACK_PRO_CI_NODE_INDEX" == "0" ]; then ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.lcov.json; fi
  - if [ "$KNAPSACK_PRO_CI_NODE_INDEX" == "1" ]; then bundle exec bundle-audit check --update --ignore CVE-2015-9284 CVE-2020-26247; fi
  - if [ "$KNAPSACK_PRO_CI_NODE_INDEX" == "1" ]; then yarn build-storybook; fi
  - if [ "$KNAPSACK_PRO_CI_NODE_INDEX" == "2" ]; then bin/test-console-check; fi
  - bundle exec rake data_updates:run # required for at least creating the first admin user in e2e tests.
  - yarn e2e:ci
  # Dropping and recreating the database for Capybara/rspecs
  - curl -XDELETE "${ELASTICSEARCH_URL}/*" # resetting elastic search post e2e tests
  - bundle exec rails db:drop
  - bundle exec rails db:create
  - bundle exec rails db:schema:load
  - 'bin/knapsack_pro_rspec'
  - '[ ! -f .approvals ] || bundle exec approvals verify --ask false'
after_script:
  - ./cc-test-reporter format-coverage -t simplecov -o ./coverage/codeclimate.$KNAPSACK_PRO_CI_NODE_INDEX.json ./coverage/spec/.resultset.json
  - ./cc-test-reporter sum-coverage --output - --parts $COVERAGE_REPORTS_TOTAL coverage/codeclimate.*.json | ./cc-test-reporter upload-coverage --input -

jobs:
  include:
    - stage: Deploy
      name: Deploy DEV
      if: type != pull_request
      script: skip
      after_script: skip
      deploy:
        provider: heroku
        api_key: '$HEROKU_AUTH_TOKEN'
        app:
          master: themintfarm
